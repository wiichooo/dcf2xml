/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dcf2xml;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.w3c.dom.Node;
import tablas.Item;
import tablas.TablaModeloItem;
import tablas.TablaRenderizadorItems;
import tablas.Record;
import tablas.TablaModeloRecord;
import pruebaxml.LeerXml;
import tablas.TablaModeloValueSet;
import tablas.ValueSet;
/**
 *
 * @author mynor
 */
public class RevisarXML extends javax.swing.JDialog {

    /**
     * Creates new form RevisarXML
     */
    LeerXml lector = null;
    private TablaModeloRecord modeloRecord = new TablaModeloRecord();
    private TablaModeloItem modeloItem = new TablaModeloItem();
    private TablaModeloValueSet modeloValueSet = new TablaModeloValueSet();
    private TablaRenderizadorItems renderizador = new TablaRenderizadorItems();
    private ListSelectionModel listSelectionModel;
    private ListSelectionModel listSelectionModel2;
    
    public RevisarXML(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Inicio a = (Inicio)parent;
        initComponents();
        AddListeners();
        lector = new LeerXml(a.salida);
        ArrayList lista = new ArrayList();
        lista = lector.getNodosHijos(lector.getRaiz());
        Node aux = null;
        Iterator ilist = lista.iterator();
        
        while(ilist.hasNext()){
            aux = (Node) ilist.next();
        modeloRecord.agregarRecord(new Record(lector.getAtt(aux, "Label"), lector.getAtt(aux, "Name"), 
                    lector.getAtt(aux, "RecordTypeValue"), lector.getAtt(aux, "Required"), 
                    lector.getAtt(aux, "MaxRecords"),lector.getAtt(aux, "RecordLen")));
        }
        recordjTable.setModel(modeloRecord);
        recordjTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        recordjTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        recordjTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        recordjTable.setDefaultRenderer(String.class, renderizador);
        
        itemjTable.setModel(modeloItem);
        itemjTable.getColumnModel().getColumn(0).setPreferredWidth(300);
        itemjTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        itemjTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemjTable.setDefaultRenderer(String.class, renderizador);
        
        valuejTable.setModel(modeloValueSet);
        valuejTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        valuejTable.setDefaultRenderer(String.class, renderizador);
        
        //ancho del splitpanel vertical
        jSplitPane1.setDividerLocation(350);
        ///divide simetricamente el jsplitpane2 horizontal
        double height = jSplitPane2.getHeight(); // 0.0 by default
        height = 1D;
        jSplitPane2.setResizeWeight(height);
        height = .5D;
        jSplitPane2.setResizeWeight(height);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        valuejTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemjTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordjTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RevisarXML");
        setPreferredSize(new java.awt.Dimension(1084, 660));
        setResizable(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/16/Symbol Check.png"))); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        valuejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(valuejTable);

        jSplitPane2.setRightComponent(jScrollPane2);

        itemjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(itemjTable);

        jSplitPane2.setLeftComponent(jScrollPane3);

        jSplitPane1.setRightComponent(jSplitPane2);

        recordjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(recordjTable);

        jSplitPane1.setLeftComponent(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(783, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable itemjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable recordjTable;
    private javax.swing.JTable valuejTable;
    // End of variables declaration//GEN-END:variables

    
    public void AddListeners(){
//        recordjTable.addMouseListener(new java.awt.event.MouseAdapter() {
//        @Override
//        public void mouseClicked(java.awt.event.MouseEvent e) {
//            int row = recordjTable.rowAtPoint(e.getPoint());
//            RecordSelected(recordjTable.getValueAt(row, 1).toString());
//        }
//        });
        
//        itemjTable.addMouseListener(new java.awt.event.MouseAdapter() {
//        @Override
//        public void mouseClicked(java.awt.event.MouseEvent e) {
//            int row = itemjTable.rowAtPoint(e.getPoint());
//            ItemSelected(itemjTable.getValueAt(row, 1).toString());   
//        }
//        });
        
        listSelectionModel =  recordjTable.getSelectionModel();
        recordjTable.setSelectionModel(listSelectionModel);
        listSelectionModel.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel)e.getSource();
                int minIndex = lsm.getMinSelectionIndex();
                int maxIndex = lsm.getMaxSelectionIndex();
                for (int i = minIndex; i <= maxIndex; i++) {
                    if (lsm.isSelectedIndex(i)) {
                        RecordSelected(recordjTable.getValueAt(i, 1).toString());
                    }
                }
            }
        });
        
        listSelectionModel2 =  itemjTable.getSelectionModel();
        itemjTable.setSelectionModel(listSelectionModel2);
        listSelectionModel2.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                ListSelectionModel lsm = (ListSelectionModel)e.getSource();
                int minIndex = lsm.getMinSelectionIndex();
                int maxIndex = lsm.getMaxSelectionIndex();
                for (int i = minIndex; i <= maxIndex; i++) {
                    if (lsm.isSelectedIndex(i)) {
                        ItemSelected(itemjTable.getValueAt(i, 1).toString());
                    }
                }
            }
        });
    }
    public void RecordSelected(String valor){
               
        ArrayList lista = new ArrayList();
        if(valor.trim().equals("-"))
            lista = lector.getNodosHijos(lector.getIdItems());
        else
            lista = lector.getNodosHijos(lector.getNodeByName(valor, lector.getRaiz()));
        
        Node aux = null;
        Iterator ilist = lista.iterator();
        
        modeloItem = new TablaModeloItem();
        while(ilist.hasNext()){
            aux = (Node) ilist.next();
            modeloItem.agregarItem(new Item(lector.getAtt(aux, "Label"), lector.getAtt(aux, "Name"), 
                    lector.getAtt(aux, "Start"), lector.getAtt(aux, "Len"), lector.getAtt(aux, "DataType"), 
                    lector.getAtt(aux, "ItemType"), lector.getAtt(aux, "Occurrences"), lector.getAtt(aux, "Decimal"), 
                    lector.getAtt(aux, "DecimalChar"), lector.getAtt(aux, "ZeroFill")));
        }
        itemjTable.setModel(modeloItem);
        itemjTable.getColumnModel().getColumn(0).setPreferredWidth(300);
        itemjTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        itemjTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemjTable.setDefaultRenderer(String.class, renderizador);

    }
    
    public void ItemSelected(String valor){
    
        ArrayList lista = new ArrayList();
        ArrayList lista2 = new ArrayList();
        lista = lector.getNodosHijos(lector.getNodeByName(valor, lector.getRaiz()));
        
        Node aux = null;
        Node aux2 = null;
        Iterator ilist = lista.iterator();
        
        
        modeloValueSet = new TablaModeloValueSet();
        
        while(ilist.hasNext()){
            aux = (Node) ilist.next();
            modeloValueSet.agregarValueSet(new ValueSet(lector.getAtt(aux, "Label"), lector.getAtt(aux, "Name"), 
                    "", "", ""));
            
            lista2 = lector.getNodosHijos(aux);
            Iterator ilist2 = lista2.iterator();
            while(ilist2.hasNext()){
                aux2 = (Node) ilist2.next();
                modeloValueSet.agregarValueSet(new ValueSet("", "", 
                    lector.getAtt(aux2, "Label"), lector.getAtt(aux2, "Name"), lector.getVal(aux2).toString()));
            }
            
        }
        valuejTable.setModel(modeloValueSet);
        valuejTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        valuejTable.setDefaultRenderer(String.class, renderizador);
    }
}
